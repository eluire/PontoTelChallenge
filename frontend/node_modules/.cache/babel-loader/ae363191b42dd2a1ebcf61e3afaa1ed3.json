{"ast":null,"code":"var _jsxFileName = \"/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [_delete, setDelete] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [loading, setLoading] = useState(false); // const [checkboxes, setCheckBoxes] = useRef(null);\n\n  var selectedCheckboxes = new Set();\n  const [lista_emp_disponiveis, set_lista_emp_disponiveis] = useState([{\n    nome: \"Vale\",\n    cod_empresa: \"VALE3.SA\",\n    on: false\n  }, {\n    nome: \"Itaú\",\n    cod_empresa: \"ITUB4.SA\",\n    on: false\n  }, {\n    nome: \"Ambev\",\n    cod_empresa: \"ABEV3.SA\",\n    on: false\n  }, {\n    nome: \"Petrobras\",\n    cod_empresa: \"PETR4.SA\",\n    on: false\n  }, {\n    nome: \"Bradesco\",\n    cod_empresa: \"BBDC4.SA\",\n    on: false\n  }]); // { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n  // { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n  // { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n  // { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n  // { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n\n  useEffect(() => {\n    setLoading(!loading);\n    getEmpresasDb();\n  }, []);\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n  useEffect(() => {\n    console.log(lista_emp_disponiveis);\n  }, [lista_emp_disponiveis]);\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      deleteEmpresasDb();\n    }\n  }, [_delete]); //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map(key => key === chave ? true : false);\n  }\n\n  async function getEmpresasDb() {\n    if (!refresh) {\n      try {\n        const resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n        resp.data.map(empresa => {\n          setStatePrice(prevstate => [...prevstate, {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"]\n          }]);\n        });\n      } catch {\n        console.log(\"erro na api\");\n        setStatePrice([{\n          nome: \"try again\",\n          preco: \"\"\n        }]);\n      }\n    } else {\n      setLoading(!loading);\n      setTimeout(async () => {\n        try {\n          const resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n          console.log(resp.data);\n          resp.data.map(empresa => {\n            if (isin(empresa[\"cod_empresa\"], state_price)) {\n              console.log(empresa[\"cod_empresa\"]);\n              setStatePrice(prevstate => [...prevstate, {\n                nome: empresa[\"empresa\"],\n                cod_empresa: empresa[\"cod_empresa\"],\n                preco: empresa[\"price\"]\n              }]);\n            }\n          });\n          setStateNoPrice([]);\n          setSubmit(!submit);\n          setDelete(!_delete);\n          setRefresh(!refresh);\n          setLoading(!loading);\n        } catch {\n          console.log(\"erro, tela não atualizada\");\n        }\n      }, 2000);\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(\"save\");\n      console.log(state_no_Price);\n      const resp = await axios.post(\"http://127.0.0.1:5001/save-personalizada\", state_no_Price);\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  async function deleteEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.delete(\"http://127.0.0.1:5001/delete-personalizada\", {\n        data: state_no_Price\n      });\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não deletada\");\n    }\n  }\n\n  const handleButtonSave = () => {\n    Array.isArray(lista_emp_disponiveis) && lista_emp_disponiveis.map(emp => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: emp[\"nome\"],\n          cod_empresa: emp[\"cod_empresa\"]\n        }]);\n        set_lista_emp_disponiveis(emp[{\n          on: true\n        }]);\n      }\n    });\n    setSubmit(!submit);\n  };\n\n  const handleButtonDelete = () => {\n    Array.isArray(lista_emp_disponiveis) && lista_emp_disponiveis.map(emp => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: emp[\"nome\"],\n          cod_empresa: emp[\"cod_empresa\"]\n        }]);\n        set_lista_emp_disponiveis(emp[{\n          on: false\n        }]);\n      }\n    });\n    setDelete(!_delete);\n  };\n\n  const handleInputCheck = e => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return Array.isArray(lista_emp_disponiveis) && lista_emp_disponiveis.map(empresa => /*#__PURE__*/React.createElement(\"div\", {\n      key: empresa.nome,\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      cod: empresa.cod_empresa,\n      nome: empresa.nome,\n      onClick: handleInputCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, empresa.nome)));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }\n      }, createCheckBox(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"bblue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"save\",\n        className: \"btn btn-default\",\n        type: \"submit\",\n        onClick: handleButtonSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }\n      }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"bred\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        id: \"delete\",\n        className: \"btn btn-default\",\n        type: \"submit\",\n        onClick: handleButtonDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, \"Delete\")))));\n    } else return null;\n  }\n\n  function renderAll() {\n    if (loading) {\n      console.log(\"loading\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"frontend/ponto_challenge/src/assets/loading.gif\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      console.log(\"not loading\");\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-personalizada\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, !isEmpty(state_price) ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"toggle\",\n        onClick: () => setToggle(!toggle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-list\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 19\n        }\n      })) : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, !isEmpty(state_price) ? renderToggle() : null)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"empresas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, state_price.map(empresa => /*#__PURE__*/React.createElement(\"button\", {\n        key: empresa.nome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, empresa.nome, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 19\n        }\n      }), empresa.preco)))));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 10\n    }\n  }, renderAll(), \")\");\n};\n\nexport default ConsultaPersonalizada;","map":{"version":3,"sources":["/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js"],"names":["React","useState","useEffect","useRef","axios","Main","ConsultaPersonalizada","state_price","setStatePrice","state_no_Price","setStateNoPrice","toggle","setToggle","submit","setSubmit","_delete","setDelete","refresh","setRefresh","loading","setLoading","selectedCheckboxes","Set","lista_emp_disponiveis","set_lista_emp_disponiveis","nome","cod_empresa","on","getEmpresasDb","console","log","isEmpty","pushEmpresasDb","deleteEmpresasDb","obj","key","hasOwnProperty","isin","chave","map","resp","get","data","empresa","prevstate","preco","setTimeout","post","alert","delete","handleButtonSave","Array","isArray","emp","has","handleButtonDelete","handleInputCheck","e","cod","target","getAttribute","add","createCheckBox","renderToggle","renderAll"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [_delete, setDelete] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [loading, setLoading] = useState(false);\n  // const [checkboxes, setCheckBoxes] = useRef(null);\n  var selectedCheckboxes = new Set();\n  const [lista_emp_disponiveis, set_lista_emp_disponiveis] = useState([\n    { nome: \"Vale\", cod_empresa: \"VALE3.SA\", on: false },\n    { nome: \"Itaú\", cod_empresa: \"ITUB4.SA\", on: false },\n    { nome: \"Ambev\", cod_empresa: \"ABEV3.SA\", on: false },\n    { nome: \"Petrobras\", cod_empresa: \"PETR4.SA\", on: false },\n    { nome: \"Bradesco\", cod_empresa: \"BBDC4.SA\", on: false },\n  ]);\n  // { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n  // { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n  // { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n  // { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n  // { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n\n  useEffect(() => {\n    setLoading(!loading);\n    getEmpresasDb();\n  }, []);\n\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n\n  useEffect(() => {\n    console.log(lista_emp_disponiveis);\n  }, [lista_emp_disponiveis]);\n\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      deleteEmpresasDb();\n    }\n  }, [_delete]);\n\n  //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map((key) => (key === chave ? true : false));\n  }\n\n  async function getEmpresasDb() {\n    if (!refresh) {\n      try {\n        const resp = await axios.get(\n          \"http://127.0.0.1:5001/export-personalizada\"\n        );\n        resp.data.map((empresa) => {\n          setStatePrice((prevstate) => [\n            ...prevstate,\n            {\n              nome: empresa[\"empresa\"],\n              cod_empresa: empresa[\"cod_empresa\"],\n              preco: empresa[\"price\"],\n            },\n          ]);\n        });\n      } catch {\n        console.log(\"erro na api\");\n        setStatePrice([{ nome: \"try again\", preco: \"\" }]);\n      }\n    } else {\n      setLoading(!loading);\n      setTimeout(async () => {\n        try {\n          const resp = await axios.get(\n            \"http://127.0.0.1:5001/export-personalizada\"\n          );\n          console.log(resp.data);\n          resp.data.map((empresa) => {\n            if (isin(empresa[\"cod_empresa\"], state_price)) {\n              console.log(empresa[\"cod_empresa\"]);\n              setStatePrice((prevstate) => [\n                ...prevstate,\n                {\n                  nome: empresa[\"empresa\"],\n                  cod_empresa: empresa[\"cod_empresa\"],\n                  preco: empresa[\"price\"],\n                },\n              ]);\n            }\n          });\n          setStateNoPrice([]);\n          setSubmit(!submit);\n          setDelete(!_delete);\n          setRefresh(!refresh);\n          setLoading(!loading);\n        } catch {\n          console.log(\"erro, tela não atualizada\");\n        }\n      }, 2000);\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(\"save\");\n      console.log(state_no_Price);\n      const resp = await axios.post(\n        \"http://127.0.0.1:5001/save-personalizada\",\n        state_no_Price\n      );\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  async function deleteEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.delete(\n        \"http://127.0.0.1:5001/delete-personalizada\",\n        { data: state_no_Price }\n      );\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não deletada\");\n    }\n  }\n  const handleButtonSave = () => {\n    Array.isArray(lista_emp_disponiveis) &&\n      lista_emp_disponiveis.map((emp) => {\n        if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n          setStateNoPrice((prevstate) => [\n            ...prevstate,\n            { empresa: emp[\"nome\"], cod_empresa: emp[\"cod_empresa\"] },\n          ]);\n\n          set_lista_emp_disponiveis(emp[{ on: true }]);\n        }\n      });\n    setSubmit(!submit);\n  };\n\n  const handleButtonDelete = () => {\n    Array.isArray(lista_emp_disponiveis) &&\n      lista_emp_disponiveis.map((emp) => {\n        if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n          setStateNoPrice((prevstate) => [\n            ...prevstate,\n            { empresa: emp[\"nome\"], cod_empresa: emp[\"cod_empresa\"] },\n          ]);\n\n          set_lista_emp_disponiveis(emp[{ on: false }]);\n        }\n      });\n    setDelete(!_delete);\n  };\n\n  const handleInputCheck = (e) => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return (\n      Array.isArray(lista_emp_disponiveis) &&\n      lista_emp_disponiveis.map((empresa) => (\n        <div key={empresa.nome} className=\"form-check\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            cod={empresa.cod_empresa}\n            nome={empresa.nome}\n            onClick={handleInputCheck}\n          />\n          <label className=\"form-check-label\">{empresa.nome}</label>\n        </div>\n      ))\n    );\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return (\n        <form>\n          <div className=\"options\">\n            {createCheckBox()}\n            <div className=\"buttons\">\n              <div id=\"bblue\">\n                <button\n                  id=\"save\"\n                  className=\"btn btn-default\"\n                  type=\"submit\"\n                  onClick={handleButtonSave}\n                >\n                  Save\n                </button>\n              </div>\n              <div id=\"bred\">\n                <button\n                  id=\"delete\"\n                  className=\"btn btn-default\"\n                  type=\"submit\"\n                  onClick={handleButtonDelete}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      );\n    } else return null;\n  }\n  function renderAll() {\n    if (loading) {\n      console.log(\"loading\");\n      return (\n        <div className=\"img\">\n          <img src=\"frontend/ponto_challenge/src/assets/loading.gif\"></img>\n        </div>\n      );\n    } else {\n      console.log(\"not loading\");\n      return (\n        <div className=\"main-personalizada\">\n          <div className=\"top\">\n            <div className=\"button\">\n              {!isEmpty(state_price) ? (\n                <button className=\"toggle\" onClick={() => setToggle(!toggle)}>\n                  <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\n                </button>\n              ) : null}\n            </div>\n            <div className=\"checkbox\">\n              {!isEmpty(state_price) ? renderToggle() : null}\n            </div>\n          </div>\n          <div className=\"dashboard\">\n            <div className=\"empresas\">\n              {state_price.map((empresa) => (\n                <button key={empresa.nome}>\n                  {empresa.nome}\n                  <br />\n                  {empresa.preco}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  return <Main>{renderAll()})</Main>;\n};\n\nexport default ConsultaPersonalizada;\n"]},"metadata":{},"sourceType":"module"}
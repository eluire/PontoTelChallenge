{"ast":null,"code":"var _jsxFileName = \"/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [_delete, setDelete] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const [lista_emp_disponiveis, set_lista_emp_disponiveis] = useState([{\n    nome: \"Vale\",\n    cod_empresa: \"VALE3.SA\",\n    on: false\n  }, {\n    nome: \"Itaú\",\n    cod_empresa: \"ITUB4.SA\",\n    on: false\n  }, {\n    nome: \"Ambev\",\n    cod_empresa: \"ABEV3.SA\",\n    on: false\n  }, {\n    nome: \"Petrobras\",\n    cod_empresa: \"PETR4.SA\",\n    on: false\n  }, {\n    nome: \"Bradesco\",\n    cod_empresa: \"BBDC4.SA\",\n    on: false\n  }]); // { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n  // { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n  // { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n  // { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n  // { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n  // const checkEl = useRef(null);\n\n  useEffect(() => {\n    if (isEmpty(state_price)) {\n      getEmpresasDb();\n    }\n  }, []);\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n  useEffect(() => {\n    console.log(lista_emp_disponiveis);\n  }, [lista_emp_disponiveis]);\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      deleteEmpresasDb();\n    }\n  }, [_delete]);\n  useEffect(() => {\n    if (refresh && !isEmpty(state_no_Price)) {\n      getEmpresasDb();\n    }\n  }, [refresh]); //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map(key => key === chave ? true : false);\n  }\n\n  async function getEmpresasDb() {\n    const resp = \"\";\n\n    try {\n      resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{\n        nome: \"try again\",\n        preco: \"\"\n      }]);\n    }\n\n    setStatePrice([]);\n\n    if (!refresh) {\n      resp.data.map(empresa => {\n        setStatePrice(prevstate => [...prevstate, {\n          nome: empresa[\"empresa\"],\n          cod_empresa: empresa[\"cod_empresa\"],\n          preco: empresa[\"price\"]\n        }]);\n      });\n    } else {\n      console.log(resp.data);\n      resp.data.map(empresa => {\n        if (isin(empresa[\"cod_empresa\"], state_price)) {\n          console.log(empresa[\"cod_empresa\"]);\n          setStatePrice(prevstate => [...prevstate, {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"]\n          }]);\n        }\n      });\n      setStateNoPrice([]);\n      setSubmit(!submit);\n      setDelete(!_delete);\n      setRefresh(!refresh);\n    }\n  } // async function refreshEmpresasDb() {\n  //   try {\n  //     const resp = await axios.get(\n  //       \"http://127.0.0.1:5001/export-personalizada\"\n  //     );\n  //     console.log(resp.data);\n  //     resp.data.map((empresa) => {\n  //       if (isin(empresa[\"cod_empresa\"], state_price)) {\n  //         console.log(empresa[\"cod_empresa\"]);\n  //         setStatePrice((prevstate) => [\n  //           ...prevstate,\n  //           {\n  //             nome: empresa[\"empresa\"],\n  //             cod_empresa: empresa[\"cod_empresa\"],\n  //             preco: empresa[\"price\"],\n  //           },\n  //         ]);\n  //       }\n  //     });\n  //     setStateNoPrice([]);\n  //     setSubmit(!submit);\n  //     setDelete(!_delete);\n  //     setRefresh(!refresh);\n  //   } catch {\n  //     console.log(\"erro, tela não atualizada\");\n  //   }\n  // }\n\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(\"save\");\n      console.log(state_no_Price);\n      const resp = await axios.post(\"http://127.0.0.1:5001/save-personalizada\", state_no_Price);\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  async function deleteEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.delete(\"http://127.0.0.1:5001/delete-personalizada\", {\n        data: state_no_Price\n      });\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não deletada\");\n    }\n  }\n\n  const handleButtonSave = () => {\n    Array.isArray(lista_emp_disponiveis) && lista_emp_disponiveis.map(emp => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: emp[\"nome\"],\n          cod_empresa: emp[\"cod_empresa\"]\n        }]);\n        set_lista_emp_disponiveis(emp[{\n          on: true\n        }]);\n      }\n    });\n    setSubmit(!submit);\n  };\n\n  const handleButtonDelete = () => {\n    Array.isArray(lista_emp_disponiveis) && lista_emp_disponiveis.map(emp => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: emp[\"nome\"],\n          cod_empresa: emp[\"cod_empresa\"]\n        }]);\n        set_lista_emp_disponiveis(emp[{\n          on: false\n        }]);\n      }\n    });\n    setDelete(!_delete);\n  };\n\n  const handleInputCheck = e => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return Array.isArray(lista_emp_disponiveis) && lista_emp_disponiveis.map(empresa => /*#__PURE__*/React.createElement(\"div\", {\n      key: empresa.nome,\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      cod: empresa.cod_empresa,\n      nome: empresa.nome,\n      onClick: handleInputCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, empresa.nome)));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, createCheckBox(), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        onClick: handleButtonSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        onClick: handleButtonDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, \"Delete\")));\n    } else return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setToggle(!toggle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-list\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  })), renderToggle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"empresas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, state_price.map(empresa => /*#__PURE__*/React.createElement(\"button\", {\n    key: empresa.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, empresa.nome, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }), empresa.preco)))));\n};\n\nexport default ConsultaPersonalizada;","map":{"version":3,"sources":["/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js"],"names":["React","useState","useEffect","axios","Main","ConsultaPersonalizada","state_price","setStatePrice","state_no_Price","setStateNoPrice","toggle","setToggle","submit","setSubmit","_delete","setDelete","refresh","setRefresh","selectedCheckboxes","Set","lista_emp_disponiveis","set_lista_emp_disponiveis","nome","cod_empresa","on","isEmpty","getEmpresasDb","console","log","pushEmpresasDb","deleteEmpresasDb","obj","key","hasOwnProperty","isin","chave","map","resp","get","preco","data","empresa","prevstate","post","alert","delete","handleButtonSave","Array","isArray","emp","has","handleButtonDelete","handleInputCheck","e","cod","target","getAttribute","add","createCheckBox","renderToggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [_delete, setDelete] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const [lista_emp_disponiveis, set_lista_emp_disponiveis] = useState([\n    { nome: \"Vale\", cod_empresa: \"VALE3.SA\", on: false },\n    { nome: \"Itaú\", cod_empresa: \"ITUB4.SA\", on: false },\n    { nome: \"Ambev\", cod_empresa: \"ABEV3.SA\", on: false },\n    { nome: \"Petrobras\", cod_empresa: \"PETR4.SA\", on: false },\n    { nome: \"Bradesco\", cod_empresa: \"BBDC4.SA\", on: false },\n  ]);\n  // { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n  // { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n  // { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n  // { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n  // { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n  // const checkEl = useRef(null);\n\n  useEffect(() => {\n    if (isEmpty(state_price)) {\n      getEmpresasDb();\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n\n  useEffect(() => {\n    console.log(lista_emp_disponiveis);\n  }, [lista_emp_disponiveis]);\n\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      deleteEmpresasDb();\n    }\n  }, [_delete]);\n\n  useEffect(() => {\n    if (refresh && !isEmpty(state_no_Price)) {\n      getEmpresasDb();\n    }\n  }, [refresh]);\n\n  //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map((key) => (key === chave ? true : false));\n  }\n\n  async function getEmpresasDb() {\n    const resp = \"\";\n\n    try {\n      resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{ nome: \"try again\", preco: \"\" }]);\n    }\n\n    setStatePrice([]);\n\n    if (!refresh) {\n      resp.data.map((empresa) => {\n        setStatePrice((prevstate) => [\n          ...prevstate,\n          {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"],\n          },\n        ]);\n      });\n    } else {\n      console.log(resp.data);\n      resp.data.map((empresa) => {\n        if (isin(empresa[\"cod_empresa\"], state_price)) {\n          console.log(empresa[\"cod_empresa\"]);\n          setStatePrice((prevstate) => [\n            ...prevstate,\n            {\n              nome: empresa[\"empresa\"],\n              cod_empresa: empresa[\"cod_empresa\"],\n              preco: empresa[\"price\"],\n            },\n          ]);\n        }\n      });\n      setStateNoPrice([]);\n      setSubmit(!submit);\n      setDelete(!_delete);\n      setRefresh(!refresh);\n    }\n  }\n\n  // async function refreshEmpresasDb() {\n  //   try {\n  //     const resp = await axios.get(\n  //       \"http://127.0.0.1:5001/export-personalizada\"\n  //     );\n  //     console.log(resp.data);\n  //     resp.data.map((empresa) => {\n  //       if (isin(empresa[\"cod_empresa\"], state_price)) {\n  //         console.log(empresa[\"cod_empresa\"]);\n  //         setStatePrice((prevstate) => [\n  //           ...prevstate,\n  //           {\n  //             nome: empresa[\"empresa\"],\n  //             cod_empresa: empresa[\"cod_empresa\"],\n  //             preco: empresa[\"price\"],\n  //           },\n  //         ]);\n  //       }\n  //     });\n  //     setStateNoPrice([]);\n  //     setSubmit(!submit);\n  //     setDelete(!_delete);\n  //     setRefresh(!refresh);\n  //   } catch {\n  //     console.log(\"erro, tela não atualizada\");\n  //   }\n  // }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(\"save\");\n      console.log(state_no_Price);\n      const resp = await axios.post(\n        \"http://127.0.0.1:5001/save-personalizada\",\n        state_no_Price\n      );\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  async function deleteEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.delete(\n        \"http://127.0.0.1:5001/delete-personalizada\",\n        { data: state_no_Price }\n      );\n      alert(resp.data);\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não deletada\");\n    }\n  }\n  const handleButtonSave = () => {\n    Array.isArray(lista_emp_disponiveis) &&\n      lista_emp_disponiveis.map((emp) => {\n        if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n          setStateNoPrice((prevstate) => [\n            ...prevstate,\n            { empresa: emp[\"nome\"], cod_empresa: emp[\"cod_empresa\"] },\n          ]);\n\n          set_lista_emp_disponiveis(emp[{ on: true }]);\n        }\n      });\n    setSubmit(!submit);\n  };\n\n  const handleButtonDelete = () => {\n    Array.isArray(lista_emp_disponiveis) &&\n      lista_emp_disponiveis.map((emp) => {\n        if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n          setStateNoPrice((prevstate) => [\n            ...prevstate,\n            { empresa: emp[\"nome\"], cod_empresa: emp[\"cod_empresa\"] },\n          ]);\n\n          set_lista_emp_disponiveis(emp[{ on: false }]);\n        }\n      });\n    setDelete(!_delete);\n  };\n\n  const handleInputCheck = (e) => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return (\n      Array.isArray(lista_emp_disponiveis) &&\n      lista_emp_disponiveis.map((empresa) => (\n        <div key={empresa.nome} className=\"form-check\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            cod={empresa.cod_empresa}\n            nome={empresa.nome}\n            onClick={handleInputCheck}\n          />\n          <label className=\"form-check-label\">{empresa.nome}</label>\n        </div>\n      ))\n    );\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return (\n        <div className=\"options\">\n          <form>\n            {createCheckBox()}\n            <button\n              className=\"btn btn-default\"\n              type=\"submit\"\n              onClick={handleButtonSave}\n            >\n              Save\n            </button>\n            <button\n              className=\"btn btn-default\"\n              type=\"submit\"\n              onClick={handleButtonDelete}\n            >\n              Delete\n            </button>\n          </form>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <Main>\n      <button onClick={() => setToggle(!toggle)}>\n        <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\n      </button>\n      {renderToggle()}\n      <div className=\"dashboard\">\n        <div className=\"empresas\">\n          {state_price.map((empresa) => (\n            <button key={empresa.nome}>\n              {empresa.nome}\n              <br />\n              {empresa.preco}\n            </button>\n          ))}\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default ConsultaPersonalizada;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const lista_empresas_disponiveis = [{\n    nome: \"Vale\",\n    cod_empresa: \"VALE3.SA\"\n  }, {\n    nome: \"Itaú\",\n    cod_empresa: \"ITUB4.SA\"\n  }, {\n    nome: \"Ambev\",\n    cod_empresa: \"ABEV3.SA\"\n  }, {\n    nome: \"Petrobras\",\n    cod_empresa: \"PETR4.SA\"\n  }, {\n    nome: \"Bradesco\",\n    cod_empresa: \"BBDC4.SA\"\n  }, {\n    nome: \"Santander\",\n    cod_empresa: \"BCSA34.SA\"\n  }, {\n    nome: \"Telefonica\",\n    cod_empresa: \"VIVT4.SA\"\n  }, {\n    nome: \"Banco do Brasil\",\n    cod_empresa: \"BBAS3.SA\"\n  }, {\n    nome: \"Itausa\",\n    cod_empresa: \"ITSA4.SA\"\n  }, {\n    nome: \"Weg\",\n    cod_empresa: \"WEGE3.SA\"\n  }]; // const checkEl = useRef(null);\n\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n  useEffect(() => {\n    console.log(submit); // pushEmpresasDb();\n  }, [submit]);\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n      resp.data.map(empresa => {\n        setStatePrice(prevstate => [...prevstate, {\n          nome: empresa[\"empresa\"],\n          cod_empresa: empresa[\"cod_empresa\"],\n          preco: empresa[\"price\"]\n        }]);\n      });\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{\n        nome: \"try again\",\n        preco: \"\"\n      }]);\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.post(\"http://127.0.0.1:5001/save-personalizada\", state_no_Price);\n      alert(resp.data); // getEmpresasDb();\n      // setSubmit(!submit);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    lista_empresas_disponiveis.map(emp => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: emp[\"nome\"],\n          cod_empresa: emp[\"cod_empresa\"]\n        }]);\n      }\n    });\n    setSubmit(!submit);\n    console.log(\"oi\");\n  };\n\n  const handleInputCheck = e => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return lista_empresas_disponiveis.map(empresa => /*#__PURE__*/React.createElement(\"div\", {\n      key: empresa.nome,\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      cod: empresa.cod_empresa,\n      nome: empresa.nome,\n      onClick: handleInputCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, empresa.nome)));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, createCheckBox(), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, \"Save\")));\n    } else return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setToggle(!toggle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-list\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), renderToggle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"empresas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, state_price.map(empresa => /*#__PURE__*/React.createElement(\"button\", {\n    key: empresa.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, empresa.nome, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), empresa.preco)))));\n};\n\nexport default ConsultaPersonalizada;","map":{"version":3,"sources":["/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js"],"names":["React","useState","useEffect","useRef","axios","Main","ConsultaPersonalizada","state_price","setStatePrice","state_no_Price","setStateNoPrice","toggle","setToggle","submit","setSubmit","refresh","setRefresh","selectedCheckboxes","Set","lista_empresas_disponiveis","nome","cod_empresa","getEmpresasDb","console","log","resp","get","data","map","empresa","prevstate","preco","pushEmpresasDb","post","alert","handleFormSubmit","e","preventDefault","emp","has","handleInputCheck","cod","target","getAttribute","delete","add","createCheckBox","renderToggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const lista_empresas_disponiveis = [\n    { nome: \"Vale\", cod_empresa: \"VALE3.SA\" },\n    { nome: \"Itaú\", cod_empresa: \"ITUB4.SA\" },\n    { nome: \"Ambev\", cod_empresa: \"ABEV3.SA\" },\n    { nome: \"Petrobras\", cod_empresa: \"PETR4.SA\" },\n    { nome: \"Bradesco\", cod_empresa: \"BBDC4.SA\" },\n    { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n    { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n    { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n    { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n    { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n  ];\n  // const checkEl = useRef(null);\n\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n\n  useEffect(() => {\n    console.log(submit);\n    // pushEmpresasDb();\n  }, [submit]);\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\n        \"http://127.0.0.1:5001/export-personalizada\"\n      );\n      resp.data.map((empresa) => {\n        setStatePrice((prevstate) => [\n          ...prevstate,\n          {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"],\n          },\n        ]);\n      });\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{ nome: \"try again\", preco: \"\" }]);\n    }\n  }\n  async function pushEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.post(\n        \"http://127.0.0.1:5001/save-personalizada\",\n        state_no_Price\n      );\n      alert(resp.data);\n      // getEmpresasDb();\n      // setSubmit(!submit);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    lista_empresas_disponiveis.map((emp) => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice((prevstate) => [\n          ...prevstate,\n          { empresa: emp[\"nome\"], cod_empresa: emp[\"cod_empresa\"] },\n        ]);\n      }\n    });\n    setSubmit(!submit);\n    console.log(\"oi\");\n  };\n\n  const handleInputCheck = (e) => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return lista_empresas_disponiveis.map((empresa) => (\n      <div key={empresa.nome} className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          cod={empresa.cod_empresa}\n          nome={empresa.nome}\n          onClick={handleInputCheck}\n        />\n        <label className=\"form-check-label\">{empresa.nome}</label>\n      </div>\n    ));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return (\n        <div className=\"options\">\n          <form onSubmit={handleFormSubmit}>\n            {createCheckBox()}\n            <button className=\"btn btn-default\" type=\"submit\">\n              Save\n            </button>\n          </form>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <Main>\n      <button onClick={() => setToggle(!toggle)}>\n        <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\n      </button>\n      {renderToggle()}\n      <div className=\"dashboard\">\n        <div className=\"empresas\">\n          {state_price.map((empresa) => (\n            <button key={empresa.nome}>\n              {empresa.nome}\n              <br />\n              {empresa.preco}\n            </button>\n          ))}\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default ConsultaPersonalizada;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const lista_empresas_disponiveis = [{\n    nome: \"Vale\",\n    cod_empresa: \"VALE3.SA\"\n  }, {\n    nome: \"Itaú\",\n    cod_empresa: \"ITUB4.SA\"\n  }, {\n    nome: \"Ambev\",\n    cod_empresa: \"ABEV3.SA\"\n  }, {\n    nome: \"Petrobras\",\n    cod_empresa: \"PETR4.SA\"\n  }, {\n    nome: \"Bradesco\",\n    cod_empresa: \"BBDC4.SA\"\n  }, {\n    nome: \"Santander\",\n    cod_empresa: \"BCSA34.SA\"\n  }, {\n    nome: \"Telefonica\",\n    cod_empresa: \"VIVT4.SA\"\n  }, {\n    nome: \"Banco do Brasil\",\n    cod_empresa: \"BBAS3.SA\"\n  }, {\n    nome: \"Itausa\",\n    cod_empresa: \"ITSA4.SA\"\n  }, {\n    nome: \"Weg\",\n    cod_empresa: \"WEGE3.SA\"\n  }]; // const checkEl = useRef(null);\n\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      console.log(state_no_Price);\n    }\n  }, [state_no_Price]);\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n  useEffect(() => {\n    if (refresh) {\n      getEmpresasDb();\n      setSubmit(!submit);\n    }\n  }, [refresh]); //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map(key => key === chave ? true : false);\n  }\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n\n      if (!refresh) {\n        resp.data.map(empresa => {\n          setStatePrice(prevstate => [...prevstate, {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"]\n          }]);\n        });\n      } else {\n        resp.data((empresa, index) => {\n          if (isin(empresa[\"cod_empresa\"], state_price)) {\n            console.log(empresa[\"cod_empresa\"]);\n            setStatePrice(prevstate => [...prevstate, {\n              nome: empresa[\"empresa\"],\n              cod_empresa: empresa[\"cod_empresa\"],\n              preco: empresa[\"price\"]\n            }]);\n          }\n        });\n        setRefresh(!refresh);\n      }\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{\n        nome: \"try again\",\n        preco: \"\"\n      }]);\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.post(\"http://127.0.0.1:5001/save-personalizada\", state_no_Price);\n      alert(resp.data); // getEmpresasDb();\n\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    lista_empresas_disponiveis.map(emp => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: emp[\"nome\"],\n          cod_empresa: emp[\"cod_empresa\"]\n        }]);\n      }\n    });\n    setSubmit(!submit);\n  };\n\n  const handleInputCheck = e => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return lista_empresas_disponiveis.map(empresa => /*#__PURE__*/React.createElement(\"div\", {\n      key: empresa.nome,\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      cod: empresa.cod_empresa,\n      nome: empresa.nome,\n      onClick: handleInputCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, empresa.nome)));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, createCheckBox(), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, \"Save\")));\n    } else return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setToggle(!toggle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-list\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  })), renderToggle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"empresas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, state_price.map(empresa => /*#__PURE__*/React.createElement(\"button\", {\n    key: empresa.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, empresa.nome, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }), empresa.preco)))));\n};\n\nexport default ConsultaPersonalizada;","map":{"version":3,"sources":["/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js"],"names":["React","useState","useEffect","useRef","axios","Main","ConsultaPersonalizada","state_price","setStatePrice","state_no_Price","setStateNoPrice","toggle","setToggle","submit","setSubmit","refresh","setRefresh","selectedCheckboxes","Set","lista_empresas_disponiveis","nome","cod_empresa","getEmpresasDb","isEmpty","console","log","pushEmpresasDb","obj","key","hasOwnProperty","isin","chave","map","resp","get","data","empresa","prevstate","preco","index","post","alert","handleFormSubmit","e","preventDefault","emp","has","handleInputCheck","cod","target","getAttribute","delete","add","createCheckBox","renderToggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const lista_empresas_disponiveis = [\n    { nome: \"Vale\", cod_empresa: \"VALE3.SA\" },\n    { nome: \"Itaú\", cod_empresa: \"ITUB4.SA\" },\n    { nome: \"Ambev\", cod_empresa: \"ABEV3.SA\" },\n    { nome: \"Petrobras\", cod_empresa: \"PETR4.SA\" },\n    { nome: \"Bradesco\", cod_empresa: \"BBDC4.SA\" },\n    { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n    { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n    { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n    { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n    { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n  ];\n  // const checkEl = useRef(null);\n\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      console.log(state_no_Price);\n    }\n  }, [state_no_Price]);\n\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n\n  useEffect(() => {\n    if (refresh) {\n      getEmpresasDb();\n      setSubmit(!submit);\n    }\n  }, [refresh]);\n\n  //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map((key) => (key === chave ? true : false));\n  }\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\n        \"http://127.0.0.1:5001/export-personalizada\"\n      );\n      if (!refresh) {\n        resp.data.map((empresa) => {\n          setStatePrice((prevstate) => [\n            ...prevstate,\n            {\n              nome: empresa[\"empresa\"],\n              cod_empresa: empresa[\"cod_empresa\"],\n              preco: empresa[\"price\"],\n            },\n          ]);\n        });\n      } else {\n        resp.data((empresa, index) => {\n          if (isin(empresa[\"cod_empresa\"], state_price)) {\n            console.log(empresa[\"cod_empresa\"]);\n            setStatePrice((prevstate) => [\n              ...prevstate,\n              {\n                nome: empresa[\"empresa\"],\n                cod_empresa: empresa[\"cod_empresa\"],\n                preco: empresa[\"price\"],\n              },\n            ]);\n          }\n        });\n        setRefresh(!refresh);\n      }\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{ nome: \"try again\", preco: \"\" }]);\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.post(\n        \"http://127.0.0.1:5001/save-personalizada\",\n        state_no_Price\n      );\n      alert(resp.data);\n      // getEmpresasDb();\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    lista_empresas_disponiveis.map((emp) => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice((prevstate) => [\n          ...prevstate,\n          { empresa: emp[\"nome\"], cod_empresa: emp[\"cod_empresa\"] },\n        ]);\n      }\n    });\n    setSubmit(!submit);\n  };\n\n  const handleInputCheck = (e) => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return lista_empresas_disponiveis.map((empresa) => (\n      <div key={empresa.nome} className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          cod={empresa.cod_empresa}\n          nome={empresa.nome}\n          onClick={handleInputCheck}\n        />\n        <label className=\"form-check-label\">{empresa.nome}</label>\n      </div>\n    ));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return (\n        <div className=\"options\">\n          <form onSubmit={handleFormSubmit}>\n            {createCheckBox()}\n            <button className=\"btn btn-default\" type=\"submit\">\n              Save\n            </button>\n          </form>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <Main>\n      <button onClick={() => setToggle(!toggle)}>\n        <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\n      </button>\n      {renderToggle()}\n      <div className=\"dashboard\">\n        <div className=\"empresas\">\n          {state_price.map((empresa) => (\n            <button key={empresa.nome}>\n              {empresa.nome}\n              <br />\n              {empresa.preco}\n            </button>\n          ))}\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default ConsultaPersonalizada;\n"]},"metadata":{},"sourceType":"module"}
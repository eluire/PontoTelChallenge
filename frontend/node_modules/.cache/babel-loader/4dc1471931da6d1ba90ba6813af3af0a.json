{"ast":null,"code":"var _jsxFileName = \"/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const checkEl = useRef([]);\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n  useEffect(() => {\n    console.log(toggle);\n  }, [toggle]);\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n      resp.data.map(empresa => {\n        setStatePrice(prevstate => [...prevstate, {\n          nome: empresa[\"empresa\"],\n          cod_empresa: empresa[\"cod_empresa\"],\n          preco: empresa[\"price\"]\n        }]);\n      });\n    } catch {\n      console.log(\"erro na api\");\n      setStateNoPrice([{\n        nome: \"try again\",\n        preco: \"\"\n      }]);\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      const resp = await axios.post(\"http://127.0.0.1:5001/save-personalizada\", state_no_Price);\n      alert(resp);\n    } catch {\n      alert(\"Empresa nÃ£o cadastrada\");\n    }\n  }\n\n  const handleInputCheck = e => {\n    if (e.target.checked) {\n      let cont = 0;\n      console.log(checkEl.current.getAttribute(\"nome\"));\n      state_price.map(empresa => {\n        if (empresa[\"cod_empresa\"] != checkEl.current.getAttribute(\"nome\")) {\n          cont += 1;\n        }\n      });\n\n      if (cont == state_price.length) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: checkEl.current.getAttribute(\"nome\"),\n          cod_empresa: checkEl.current.getAttribute(\"cod\")\n        }]);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  function renderToggle() {\n    if (toggle) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      cod: \"PETR4.SA\",\n      nome: \"Petrobras\",\n      ref: checkEl,\n      onClick: handleInputCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Petrobras\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      cod: \"VALE3.SA\",\n      nome: \"Vale\",\n      ref: checkEl,\n      onClick: handleInputCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Vale\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }));\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setToggle(!toggle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-list\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), renderToggle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"empresas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, state_price.map(empresa => /*#__PURE__*/React.createElement(\"button\", {\n    key: empresa.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, empresa.nome, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }), empresa.preco)))));\n};\n\nexport default ConsultaPersonalizada;","map":{"version":3,"sources":["/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js"],"names":["React","useState","useEffect","useRef","axios","Main","ConsultaPersonalizada","state_price","setStatePrice","state_no_Price","setStateNoPrice","toggle","setToggle","checkEl","getEmpresasDb","console","log","resp","get","data","map","empresa","prevstate","nome","cod_empresa","preco","pushEmpresasDb","post","alert","handleInputCheck","e","target","checked","cont","current","getAttribute","length","renderToggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const checkEl = useRef([]);\n\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n  useEffect(() => {\n    console.log(toggle);\n  }, [toggle]);\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\n        \"http://127.0.0.1:5001/export-personalizada\"\n      );\n      resp.data.map((empresa) => {\n        setStatePrice((prevstate) => [\n          ...prevstate,\n          {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"],\n          },\n        ]);\n      });\n    } catch {\n      console.log(\"erro na api\");\n      setStateNoPrice([{ nome: \"try again\", preco: \"\" }]);\n    }\n  }\n  async function pushEmpresasDb() {\n    try {\n      const resp = await axios.post(\n        \"http://127.0.0.1:5001/save-personalizada\",\n        state_no_Price\n      );\n      alert(resp);\n    } catch {\n      alert(\"Empresa nÃ£o cadastrada\");\n    }\n  }\n\n  const handleInputCheck = (e) => {\n    if (e.target.checked) {\n      let cont = 0;\n      console.log(checkEl.current.getAttribute(\"nome\"));\n\n      state_price.map((empresa) => {\n        if (empresa[\"cod_empresa\"] != checkEl.current.getAttribute(\"nome\")) {\n          cont += 1;\n        }\n      });\n\n      if (cont == state_price.length) {\n        setStateNoPrice((prevstate) => [\n          ...prevstate,\n          {\n            empresa: checkEl.current.getAttribute(\"nome\"),\n            cod_empresa: checkEl.current.getAttribute(\"cod\"),\n          },\n        ]);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  function renderToggle() {\n    if (toggle)\n      return (\n        <div className=\"options\">\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              cod=\"PETR4.SA\"\n              nome=\"Petrobras\"\n              ref={checkEl}\n              onClick={handleInputCheck}\n            />\n            <label className=\"form-check-label\">Petrobras</label>\n          </div>\n\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              cod=\"VALE3.SA\"\n              nome=\"Vale\"\n              ref={checkEl}\n              onClick={handleInputCheck}\n            />\n            <label className=\"form-check-label\">Vale</label>\n          </div>\n          <button type=\"button\"></button>\n        </div>\n      );\n    return null;\n  }\n\n  return (\n    <Main>\n      <button onClick={() => setToggle(!toggle)}>\n        <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\n      </button>\n      {renderToggle()}\n      <div className=\"dashboard\">\n        <div className=\"empresas\">\n          {state_price.map((empresa) => (\n            <button key={empresa.nome}>\n              {empresa.nome}\n              <br />\n              {empresa.preco}\n            </button>\n          ))}\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default ConsultaPersonalizada;\n"]},"metadata":{},"sourceType":"module"}
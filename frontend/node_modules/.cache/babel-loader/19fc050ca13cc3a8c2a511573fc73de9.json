{"ast":null,"code":"var _jsxFileName = \"/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const [lista_emp_disponiveis, set_lista_emp_disponiveis] = useState([{\n    nome: \"Vale\",\n    cod_empresa: \"VALE3.SA\",\n    on: false\n  }, {\n    nome: \"Itaú\",\n    cod_empresa: \"ITUB4.SA\",\n    on: false\n  }, {\n    nome: \"Ambev\",\n    cod_empresa: \"ABEV3.SA\",\n    on: false\n  }, {\n    nome: \"Petrobras\",\n    cod_empresa: \"PETR4.SA\",\n    on: false\n  }, {\n    nome: \"Bradesco\",\n    cod_empresa: \"BBDC4.SA\",\n    on: false\n  }]); // { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n  // { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n  // { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n  // { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n  // { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n  // const checkEl = useRef(null);\n\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n  useEffect(() => {\n    if (refresh && !isEmpty(state_price)) {\n      refreshEmpresasDb();\n    }\n  }, [refresh]); //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map(key => key === chave ? true : false);\n  }\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n      resp.data.map(empresa => {\n        setStatePrice(prevstate => [...prevstate, {\n          nome: empresa[\"empresa\"],\n          cod_empresa: empresa[\"cod_empresa\"],\n          preco: empresa[\"price\"]\n        }]);\n      });\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{\n        nome: \"try again\",\n        preco: \"\"\n      }]);\n    }\n  }\n\n  async function refreshEmpresasDb() {\n    try {\n      const resp = await axios.get(\"http://127.0.0.1:5001/export-personalizada\");\n      console.log(resp.data);\n      resp.data.map(empresa => {\n        if (isin(empresa[\"cod_empresa\"], state_price)) {\n          console.log(empresa[\"cod_empresa\"]);\n          setStatePrice(prevstate => [...prevstate, {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"]\n          }]);\n        }\n      });\n      setStateNoPrice([]);\n      setSubmit(!submit);\n      setRefresh(!refresh);\n    } catch {\n      console.log(\"erro, tela não atualizada\");\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.post(\"http://127.0.0.1:5001/save-personalizada\", state_no_Price);\n      alert(resp.data); // getEmpresasDb();\n\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  const handleFormSubmit = () => {\n    lista_emp_disponiveis.map(emp => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice(prevstate => [...prevstate, {\n          empresa: emp[\"nome\"],\n          cod_empresa: emp[\"cod_empresa\"]\n        }]);\n      }\n    });\n    setSubmit(!submit);\n  };\n\n  const handleInputCheck = e => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return lista_emp_disponiveis.map(empresa => /*#__PURE__*/React.createElement(\"div\", {\n      key: empresa.nome,\n      className: \"form-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      cod: empresa.cod_empresa,\n      nome: empresa.nome,\n      onClick: handleInputCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, empresa.nome)));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, createCheckBox(), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-default\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, \"Save\")));\n    } else return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setToggle(!toggle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-list\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })), renderToggle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"empresas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, state_price.map(empresa => /*#__PURE__*/React.createElement(\"button\", {\n    key: empresa.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, empresa.nome, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }), empresa.preco)))));\n};\n\nexport default ConsultaPersonalizada;","map":{"version":3,"sources":["/home/mateusesb/Desktop/Ponto_tel_challenge_2/frontend/ponto_challenge/src/Components/ConsultaPersonalizada/ConsultaPersonalizada.js"],"names":["React","useState","useEffect","useRef","axios","Main","ConsultaPersonalizada","state_price","setStatePrice","state_no_Price","setStateNoPrice","toggle","setToggle","submit","setSubmit","refresh","setRefresh","selectedCheckboxes","Set","lista_emp_disponiveis","set_lista_emp_disponiveis","nome","cod_empresa","on","getEmpresasDb","console","log","isEmpty","pushEmpresasDb","refreshEmpresasDb","obj","key","hasOwnProperty","isin","chave","map","resp","get","data","empresa","prevstate","preco","post","alert","handleFormSubmit","emp","has","handleInputCheck","e","cod","target","getAttribute","delete","add","createCheckBox","renderToggle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Main from \"../../Templates/Main/Main\";\nimport \"./ConsultaPersonalizada.css\";\n\nconst ConsultaPersonalizada = () => {\n  const [state_price, setStatePrice] = useState([]);\n  const [state_no_Price, setStateNoPrice] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [submit, setSubmit] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  var selectedCheckboxes = new Set();\n  const [lista_emp_disponiveis, set_lista_emp_disponiveis] = useState([\n    { nome: \"Vale\", cod_empresa: \"VALE3.SA\", on: false },\n    { nome: \"Itaú\", cod_empresa: \"ITUB4.SA\", on: false },\n    { nome: \"Ambev\", cod_empresa: \"ABEV3.SA\", on: false },\n    { nome: \"Petrobras\", cod_empresa: \"PETR4.SA\", on: false },\n    { nome: \"Bradesco\", cod_empresa: \"BBDC4.SA\", on: false },\n  ]);\n  // { nome: \"Santander\", cod_empresa: \"BCSA34.SA\" },\n  // { nome: \"Telefonica\", cod_empresa: \"VIVT4.SA\" },\n  // { nome: \"Banco do Brasil\", cod_empresa: \"BBAS3.SA\" },\n  // { nome: \"Itausa\", cod_empresa: \"ITSA4.SA\" },\n  // { nome: \"Weg\", cod_empresa: \"WEGE3.SA\" },\n  // const checkEl = useRef(null);\n\n  useEffect(() => {\n    getEmpresasDb();\n  }, []);\n\n  useEffect(() => {\n    console.log(state_no_Price);\n  }, [state_no_Price]);\n\n  useEffect(() => {\n    if (!isEmpty(state_no_Price)) {\n      pushEmpresasDb();\n    }\n  }, [submit]);\n\n  useEffect(() => {\n    if (refresh && !isEmpty(state_price)) {\n      refreshEmpresasDb();\n    }\n  }, [refresh]);\n\n  //FUNÇÃO AUXILIAR ---> COLOCAR EM OUTRO ARQUIVO\n  function isEmpty(obj) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  }\n\n  function isin(chave, obj) {\n    obj.map((key) => (key === chave ? true : false));\n  }\n\n  async function getEmpresasDb() {\n    try {\n      const resp = await axios.get(\n        \"http://127.0.0.1:5001/export-personalizada\"\n      );\n      resp.data.map((empresa) => {\n        setStatePrice((prevstate) => [\n          ...prevstate,\n          {\n            nome: empresa[\"empresa\"],\n            cod_empresa: empresa[\"cod_empresa\"],\n            preco: empresa[\"price\"],\n          },\n        ]);\n      });\n    } catch {\n      console.log(\"erro na api\");\n      setStatePrice([{ nome: \"try again\", preco: \"\" }]);\n    }\n  }\n\n  async function refreshEmpresasDb() {\n    try {\n      const resp = await axios.get(\n        \"http://127.0.0.1:5001/export-personalizada\"\n      );\n      console.log(resp.data);\n      resp.data.map((empresa) => {\n        if (isin(empresa[\"cod_empresa\"], state_price)) {\n          console.log(empresa[\"cod_empresa\"]);\n          setStatePrice((prevstate) => [\n            ...prevstate,\n            {\n              nome: empresa[\"empresa\"],\n              cod_empresa: empresa[\"cod_empresa\"],\n              preco: empresa[\"price\"],\n            },\n          ]);\n        }\n      });\n      setStateNoPrice([]);\n      setSubmit(!submit);\n      setRefresh(!refresh);\n    } catch {\n      console.log(\"erro, tela não atualizada\");\n    }\n  }\n\n  async function pushEmpresasDb() {\n    try {\n      console.log(state_no_Price);\n      const resp = await axios.post(\n        \"http://127.0.0.1:5001/save-personalizada\",\n        state_no_Price\n      );\n      alert(resp.data);\n      // getEmpresasDb();\n      setRefresh(!refresh);\n    } catch {\n      alert(\"Empresa não cadastrada\");\n    }\n  }\n\n  const handleFormSubmit = () => {\n    lista_emp_disponiveis.map((emp) => {\n      if (selectedCheckboxes.has(emp[\"cod_empresa\"])) {\n        setStateNoPrice((prevstate) => [\n          ...prevstate,\n          { empresa: emp[\"nome\"], cod_empresa: emp[\"cod_empresa\"] },\n        ]);\n      }\n    });\n    setSubmit(!submit);\n  };\n\n  const handleInputCheck = (e) => {\n    const cod = e.target.getAttribute(\"cod\");\n\n    if (selectedCheckboxes.has(cod)) {\n      selectedCheckboxes.delete(cod);\n    } else {\n      selectedCheckboxes.add(cod);\n    }\n  };\n\n  const createCheckBox = () => {\n    return lista_emp_disponiveis.map((empresa) => (\n      <div key={empresa.nome} className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          cod={empresa.cod_empresa}\n          nome={empresa.nome}\n          onClick={handleInputCheck}\n        />\n        <label className=\"form-check-label\">{empresa.nome}</label>\n      </div>\n    ));\n  };\n\n  function renderToggle() {\n    if (toggle) {\n      return (\n        <div className=\"options\">\n          <form onSubmit={handleFormSubmit}>\n            {createCheckBox()}\n            <button className=\"btn btn-default\" type=\"submit\">\n              Save\n            </button>\n          </form>\n        </div>\n      );\n    } else return null;\n  }\n\n  return (\n    <Main>\n      <button onClick={() => setToggle(!toggle)}>\n        <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\n      </button>\n      {renderToggle()}\n      <div className=\"dashboard\">\n        <div className=\"empresas\">\n          {state_price.map((empresa) => (\n            <button key={empresa.nome}>\n              {empresa.nome}\n              <br />\n              {empresa.preco}\n            </button>\n          ))}\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default ConsultaPersonalizada;\n"]},"metadata":{},"sourceType":"module"}